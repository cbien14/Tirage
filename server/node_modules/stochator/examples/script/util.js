var Util = {};

Util.Geom = {};

Util.Geom.createRectangle = function(topLeft, bottomRight) {
    var bottomLeft = [topLeft[0], bottomRight[1]];
    var topRight = [bottomRight[0], topLeft[1]];
    return d3.geom.polygon([
        topLeft, bottomLeft, bottomRight, topRight
    ]);
};
Util.Geom.pointMean = function(points) {
    var transposedPoints = d3.transpose(points);
    return [d3.mean(transposedPoints[0]), d3.mean(transposedPoints[1])];
};
Util.Geom.pointRound = function(points) {
    return points.map(function(coord) {
        coord[0] = Math.round(coord[0]);
        coord[1] = Math.round(coord[1]);
        return coord;
    });
};
Util.Geom.edgeTester = function(width, height) {
    return function(coord) {
        var isTopOrLeft = coord[0] === 0 || coord[1] === 0;
        var isBottomOrRight = coord[0] === width || coord[1] === height;
        return isTopOrLeft || isBottomOrRight;
    };
};
Util.Geom.polygonEdgeTester = function(width, height) {
    var edgeTest = Util.Geom.edgeTester(width, height);
    return function(polygon) {
        return polygon.some(edgeTest);
    };
};
Util.Geom.polygonCentroid = function(polygon) {
    return d3.geom.polygon(polygon).centroid();
};