{
  "author": {
    "name": "Carlos Rodriguez",
    "email": "carlos@s8f.org",
    "url": "http://s8f.org/"
  },
  "name": "idgen",
  "bin": {
    "idgen": "./bin/idgen.sh",
    "idgen_hex": "./bin/idgen_hex.sh"
  },
  "description": "Minimal ID generator",
  "main": "./index.js",
  "version": "1.3.0",
  "keywords": [
    "uuid",
    "id"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/carlos8f/node-idgen.git"
  },
  "homepage": "https://github.com/carlos8f/node-idgen",
  "dependencies": {},
  "devDependencies": {
    "mocha": "*",
    "component": "~0.16.4"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "license": "MIT",
  "readme": "idgen\n-----\n\nMinimal ID generator\n\n[![build status](https://secure.travis-ci.org/carlos8f/node-idgen.png)](http://travis-ci.org/carlos8f/node-idgen)\n\nFeatures (vs. traditional UUIDs and semi-deterministic alternatives):\n\n- Uses `a-zA-Z0-9` for compactness and readability. I think hex-based UUIDs are too long and hard to identify at a glance.\n- Has flexible length and character set (adjust length to increase uniqueness or compactness). Doesn't impose a specific format on the developer.\n- Uses no crypto, to make it fast.\n- Opaque, doesn't require any input data or need to reveal a MAC address, timestamp, or sequence number.\n- Timestamp can be encoded into the first characters to increase uniqueness (16+ character IDs).\n- Usable in both node and browser (also an advantage over mysql-style autoincremented IDs).\n\nInstall\n=======\n\n```bash\n$ npm install idgen\n```\n\nUsage\n=====\n\n```javascript\nvar idgen = require('idgen');\n\n// simple 8-character opaque id\nidgen();\n// returns: 1WWQ1OEc\n\n// more collision-proof 16-character id with timestamp encoded into first 7 chars:\nidgen(16);\n// returns: NHUfJAAzlBXfckWD\n\n// custom length and character set\nidgen(10, 'abcdefg');\n// returns: egbacgfbgc\n```\n\nCLI version\n===========\n\n```bash\n$ npm install -g idgen\n$ idgen\n1WWQ1OEc\n$ idgen 16\nNHUgH3IIfFXNtszP\n$ idgen 4 0123456789\n6533\n$ idgen_hex 24\ndd8ea9d0243e1a9b2f28a068\n```\n\nIsn't it likely that I will see collisions?\n===========================================\n\nMaybe. Try using [idgen-collider](https://github.com/carlos8f/node-idgen-collider)\nto find when collisions start to happen with your chosen character length and\ncharacter set.\n\nNote! As of idgen 1.2.0, IDs of 16+ characters will include a 7-character prefix based\non the current millisecond time, to reduce likelihood of collisions.\n\nLicense\n=======\n\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/carlos8f/node-idgen/issues"
  },
  "_id": "idgen@1.3.0",
  "dist": {
    "shasum": "6b9c7940c2158f671020b0b5f999668a98d6c77e"
  },
  "_from": "idgen@",
  "_resolved": "https://registry.npmjs.org/idgen/-/idgen-1.3.0.tgz"
}
